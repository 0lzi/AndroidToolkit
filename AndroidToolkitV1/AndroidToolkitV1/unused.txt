  private void backgroundWorker1_DoWork(object sender, DoWorkEventArgs e)
        {
            
      
    }

//get desktop environment path
            string desktopFolder = Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory);
            // the URL to download the file from
            string sUrlToReadFileFrom = "http://dl.google.com/android/adt/adt-bundle-windows-x86-20130522.zip";
            // the path to write the file to
            string sFilePathToWriteFileTo = Path.Combine(desktopFolder, "adt-bundle-windows-x86-20130522.zip");
            // get the exact size (in bytes) of the file download
            Uri url = new Uri(sUrlToReadFileFrom);
            System.Net.HttpWebRequest request = (System.Net.HttpWebRequest)System.Net.WebRequest.Create(url);
            System.Net.HttpWebResponse response = (System.Net.HttpWebResponse)request.GetResponse();
            response.Close();
            // gets the size of the file in bytes
            Int64 iSize = response.ContentLength;
            // keeps track of the total bytes downloaded so we can update the progress bar
            Int64 iRunningByteTotal = 0;
            //Use webClient object to download the file
            using (System.Net.WebClient client = new System.Net.WebClient())
            {
                // open the file at the remote URL for reading
                using (System.IO.Stream streamRemote = client.OpenRead(new Uri(sUrlToReadFileFrom)))
                {
                    // using the FileStream object, we can write the downloaded bytes to the file system
                    using (Stream streamLocal = new FileStream(sFilePathToWriteFileTo, FileMode.Create, FileAccess.Write, FileShare.None))
                    {

                        // loop the stream and get the file into the byte buffer
                        int iByteSize = 0;
                        byte[] byteBuffer = new byte[iSize];
                        while ((iByteSize = streamRemote.Read(byteBuffer, 0, byteBuffer.Length)) > 0)
                        {
                            // write the bytes to the file system at the file path specified
                            streamLocal.Write(byteBuffer, 0, iByteSize);
                            iRunningByteTotal += iByteSize;
                            // calculate the progress out of a base "100"
                        double dIndex = (double)(iRunningByteTotal);
                           double dTotal = (double)byteBuffer.Length;
                            double dProgressPercentage = (dIndex / dTotal);
                            int iProgressPercentage = (int)(dProgressPercentage * 100);
                            //progressBar1.Value = iProgressPercentage;
                            // update the progress bar
                            backgroundWorker1.ReportProgress(iProgressPercentage);
                        }

                        // clean up the file stream
                        streamLocal.Close();
                    }

                    // close the connection to the remote server
                    streamRemote.Close();
                }
            }
        }
       private void backgroundWorker1_RunWorkerComplete(object sender, RunWorkerCompletedEventArgs e)
        {
           MessageBox.Show("File download complete");
        }

        private void backgroundWorker1_ProgressChanged(object sender, ProgressChangedEventArgs e)
      {
           progressBar1.Value = e.ProgressPercentage;
        }